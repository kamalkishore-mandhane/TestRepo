<local:BaseWindow x:Uid="SBkUpWindow"
                  x:Class="SBkUpUI.WPFUI.View.SBkUpView"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:controls="clr-namespace:SBkUpUI.WPFUI.Controls"
                  xmlns:local="clr-namespace:SBkUpUI.WPFUI.View"
                  mc:Ignorable="d"
                  Title="WinZip Secure Backup"
                  Height="700" Width="668"
                  MinHeight="400"
                  WindowStartupLocation="CenterScreen"
                  SourceInitialized="SBkUpWindow_SourceInitialized"
                  ContentRendered="SBkUpWindow_ContentRendered"
                  Closed="SBkUpWindow_Closed"
                  PreviewMouseLeftButtonDown="SBkUpWindow_PreviewMouseLeftButtonDown"
                  Loaded="SBkUpWindow_Loaded"
                  Unloaded="SBkUpWindow_UnLoaded"
                  KeyDown="SBkUpUtilViewWindow_KeyDown"
                  PreviewMouseDown="SBkUpWindow_PreviewMouseDown"
                  x:Name="SBkUpWindow"
                  ResizeMode="CanResize">

    <Window.Resources>
        <ResourceDictionary x:Uid="ResourceDictionary_1">

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary x:Uid="ResourceDictionary_8">
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary x:Uid="ResourceDictionary_9" Source="../Themes/WinZipColorTheme.xaml"/>
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>

                <ResourceDictionary x:Uid="ResourceDictionary_2" Source="../Themes/SharedStyle.xaml"/>
                <ResourceDictionary x:Uid="ResourceDictionary_4" Source="../Themes/ThumbnailPaneContextMenuStyle.xaml"/>
                <ResourceDictionary x:Uid="ResourceDictionary_7" Source="../Themes/FakeRibbonControlsStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Uid="Style_1" x:Key="HeaderTextBlockStyle" TargetType="{x:Type TextBlock}">
                <Setter x:Uid="Setter_1" Property="FontFamily" Value="{StaticResource Shared.FontFamily.SegoeUI}"/>
                <Setter x:Uid="Setter_2" Property="FontWeight" Value="{StaticResource Shared.FontWeight.Normal}"/>
                <Setter x:Uid="Setter_3" Property="FontSize" Value="{StaticResource Shared.FontSize.12px}"/>
                <Setter x:Uid="Setter" Property="Height" Value="32"/>
                <Setter x:Uid="Setter_4" Property="Foreground" Value="{DynamicResource Brush.Title}"/>
                <Setter x:Uid="Setter_5" Property="TextWrapping" Value="Wrap"/>
            </Style>

            <Style x:Uid="Style_2" x:Key="TitleTextBlockStyle" TargetType="{x:Type TextBlock}">
                <Setter x:Uid="Setter_6" Property="FontFamily" Value="{StaticResource Shared.FontFamily.SegoeUI}"/>
                <Setter x:Uid="Setter_7" Property="FontWeight" Value="{StaticResource Shared.FontWeight.SemiBold}"/>
                <Setter x:Uid="Setter_8" Property="FontSize" Value="{StaticResource Shared.FontSize.15px}"/>
                <Setter x:Uid="Setter_9" Property="Foreground" Value="{DynamicResource Brush.Title}"/>
                <Setter x:Uid="Setter_10" Property="TextWrapping" Value="Wrap"/>
            </Style>

            <Style x:Uid="Style_3" x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
                <Setter x:Uid="Setter_11" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
                <Setter x:Uid="Setter_12" Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter x:Uid="Setter_13" Property="HorizontalContentAlignment" Value="Stretch"/>
            </Style>

            <Style x:Uid="Style_5" x:Key="MinimizeButtonStyle" TargetType="{x:Type Button}">
                <Setter x:Uid="Setter_15" Property="Background" Value="Transparent"/>
                <Setter x:Uid="Setter_16" Property="BorderBrush" Value="Black"/>
                <Setter x:Uid="Setter_17" Property="BorderThickness" Value="0"/>
                <Setter x:Uid="Setter_18" Property="Focusable" Value="False"/>
                <Setter x:Uid="Setter_19" Property="Template">
                    <Setter.Value>
                        <ControlTemplate x:Uid="ControlTemplate_1" TargetType="{x:Type Button}">
                            <Canvas x:Uid="Canvas_1" Background="{TemplateBinding Background}">
                                <Line x:Uid="Line_1" X1="17" Y1="15"
                                  X2="27" Y2="15"
                                  Stroke="{TemplateBinding BorderBrush}"
                                  StrokeThickness="1">
                                </Line>
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger  x:Uid="Trigger_1" Property="IsMouseOver" Value="True">
                        <Setter x:Uid="Setter_20" Property="Background" Value="{DynamicResource Brush.MouseOverMinimizeButtonColor}"/>
                        <Setter x:Uid="Setter_21" Property="BorderBrush" Value="Black"/>
                    </Trigger>
                    <Trigger  x:Uid="Trigger_3" Property="IsPressed" Value="True">
                        <Setter x:Uid="Setter_22" Property="Background" Value="{DynamicResource Brush.PressedMinimizeButtonColor}"/>
                        <Setter x:Uid="Setter_23" Property="BorderBrush" Value="Black"/>
                    </Trigger>
                    <Trigger x:Uid="Trigger_5" Property="IsEnabled" Value="false">
                        <Setter x:Uid="Setter_33" Property="Opacity" Value="0.5"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Uid="Style_6" x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
                <Setter x:Uid="Setter_24" Property="Background" Value="Transparent"/>
                <Setter x:Uid="Setter_25" Property="BorderBrush" Value="Black"/>
                <Setter x:Uid="Setter_26" Property="BorderThickness" Value="0"/>
                <Setter x:Uid="Setter_27" Property="Focusable" Value="False"/>
                <Setter x:Uid="Setter_28" Property="Template">
                    <Setter.Value>
                        <ControlTemplate x:Uid="ControlTemplate_2" TargetType="{x:Type Button}">
                            <Canvas x:Uid="Canvas_2" Background="{TemplateBinding Background}">
                                <Line x:Uid="Line_2" X1="17" Y1="10"
                                          X2="27" Y2="20"
                                          Stroke="{TemplateBinding BorderBrush}"
                                          StrokeThickness="1"/>
                                <Line x:Uid="Line_3" X1="17" Y1="20"
                                          X2="27" Y2="10"
                                          Stroke="{TemplateBinding BorderBrush}"
                                          StrokeThickness="1"/>
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger x:Uid="Trigger_4" Property="IsMouseOver" Value="True">
                        <Setter x:Uid="Setter_29" Property="Background" Value="{DynamicResource Brush.MouseOverCloseButtonColor}"/>
                        <Setter x:Uid="Setter_30" Property="BorderBrush" Value="White"/>
                    </Trigger>
                    <Trigger x:Uid="Trigger_2" Property="IsPressed" Value="True">
                        <Setter x:Uid="Setter_31" Property="Background" Value="{DynamicResource Brush.PressedCloseButtonColor}"/>
                        <Setter x:Uid="Setter_32" Property="BorderBrush" Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <BooleanToVisibilityConverter x:Uid="BooleanToVisibilityConverter_1" x:Key="BoolToVis" />
            <controls:BooleanToReverseVisibilityConverter x:Uid="controls:BooleanToReverseVisibilityConverter_1" x:Key="ReverseBoolToVis"/>
            <controls:ListToVisibilityConverter x:Uid="controls:ListToVisibilityConverter" x:Key="ListToVisibilityConverter"/>
            <controls:TrimmedTextBlockVisibilityConverter x:Uid="controls:trimmedVisibilityConverter" x:Key="trimmedVisibilityConverter" />

        </ResourceDictionary>
    </Window.Resources>

        <Grid x:Uid="Grid_10">
            <Grid.RowDefinitions>
                <RowDefinition x:Uid="RowDefinition_9" Height="0"/>
                <RowDefinition x:Uid="RowDefinition_14" Height="Auto"/>
                <RowDefinition x:Uid="RowDefinition_10" Height="*"/>
                <RowDefinition x:Uid="RowDefinition_13" Height="20"/>
                <RowDefinition x:Uid="RowDefinition_15" Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Uid="ColumnDefinition_14" Width="*"/>
                <ColumnDefinition x:Uid="ColumnDefinition_15" Width="*"/>
            </Grid.ColumnDefinitions>

            <StackPanel x:Uid="FakeTitleBar" x:Name="FakeTitleBar" Orientation="Horizontal" Visibility="Collapsed"
                        Width="{Binding Path=ActualWidth, ElementName=SBkUpWindow}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
                <Grid x:Uid="Grid_12" Width="{Binding Path=ActualWidth, ElementName=SBkUpWindow}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Uid="ColumnDefinition_21" Width="*"/>
                        <ColumnDefinition x:Uid="ColumnDefinition_22" Width="*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel x:Uid="StackPanel_29" Orientation="Horizontal" Grid.Row="0" Grid.Column="0">
                        <Image Margin="8,0,0,0" Height="16" Width="16" x:Uid="Image" Source="../Resources/SBkup.ico"/>
                        <TextBlock x:Uid="TextBlock_36" VerticalAlignment="Center" Margin="8,0,0,0" Text="{Binding Path=Title, ElementName=SBkUpWindow}"/>
                    </StackPanel>
                    <DockPanel x:Uid="DockPanel_2" HorizontalAlignment="Right" Margin="0,0,2,0" Height="29" Grid.Row="0" Grid.Column="1">
                        <Button x:Uid="MinimizeButton" Name="MinimizeButton" Click="MinimizeButton_Click" Height="29" Width="44" Style="{DynamicResource MinimizeButtonStyle}"/>
                        <Button x:Uid="CloseButton" Name="CloseButton" Click="CloseButton_Click" Height="29" Width="44" Style="{DynamicResource CloseButtonStyle}"/>
                    </DockPanel>
                </Grid>
            </StackPanel>

            <StackPanel x:Uid="RibbonStackPanel" x:Name="RibbonStackPanel" HorizontalAlignment="Left" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
                <TabControl x:Uid="FakeRibbonTabControl"
                        x:Name="FakeRibbonTabControl"
                        Margin="-1"
                        Style="{StaticResource FakeRibbonTabStyle}"
                        Width="{Binding Path=ActualWidth, ElementName=SBkUpWindow}" Height="130"
                        SelectedIndex="{Binding Path=DataContext.SelectedTabIndex, ElementName=SBkUpWindow}"
                        SelectionChanged="FakeRibbonTabControl_SelectionChanged">
                    <TabItem x:Uid="TabItem_1" x:Name="backupTab" Header="Backup" Style="{StaticResource FakeRibbonTabItemStyle}" VerticalAlignment="Top">
                        <StackPanel x:Uid="StackPanel_4" Background="Transparent" KeyboardNavigation.TabNavigation="Once">
                            <Grid x:Uid="Grid_5" Height="100">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Uid="ColumnDefinition_7" Width="Auto"/>
                                    <ColumnDefinition x:Uid="ColumnDefinition_8" Width="Auto"/>
                                    <ColumnDefinition x:Uid="ColumnDefinition_9" Width="Auto"/>
                                    <ColumnDefinition x:Uid="ColumnDefinition_10" Width="Auto"/>
                                    <ColumnDefinition x:Uid="ColumnDefinition_13" Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Uid="RowDefinition_7" Height="*"/>
                                    <RowDefinition x:Uid="RowDefinition_8" Height="Auto" />
                                </Grid.RowDefinitions>

                                <StackPanel x:Uid="StackPanel_5" Orientation="Horizontal" Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1">
                                    <controls:LargeImageRibbonButton x:Uid="controls:LargeImageRibbonButton_1" Margin="10,3,10,0" ButtonText="Create"
                                                                 Tag="CreateButton"
                                                                 x:Name="CreateButton"
                                                                 AutomationProperties.Name="Create"
                                                                 LargePathSource="{StaticResource Skin_CreateBackup_Geometry}"
                                                                 Command="{Binding Path=DataContext.RibbonTabViewModel.ViewModelCommands.CreateCommand, ElementName=SBkUpWindow}">
                                        <controls:LargeImageRibbonButton.ToolTip>
                                            <ToolTip x:Uid="ToolTip_1" Style="{StaticResource ButtonToolTip}">
                                                <TextBlock x:Uid="TextBlock_4" Style="{StaticResource ToolTipTextBlock}" Text="Create a backup by specifying a folder to backup, a place to store the backup, whether to encrypt the backup, how often and when to perform the backup, and how many past versions of the backup to keep."/>
                                            </ToolTip>
                                        </controls:LargeImageRibbonButton.ToolTip>
                                    </controls:LargeImageRibbonButton>
                                </StackPanel>

                                <Border x:Uid="Border_6" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1"
                                    Width="1"
                                    Margin="0,2,0,2"
                                    BorderThickness="0"
                                    SnapsToDevicePixels="True"
                                    Background="{DynamicResource Brush.FakeRibbonTab.SeparatorBorder}"/>

                                <StackPanel x:Uid="StackPanel_19" Orientation="Horizontal" Grid.Row="0" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1">
                                    <controls:LargeImageRibbonButton x:Uid="controls:LargeImageRibbonButton_3" Margin="10,3,0,0" ButtonText="Run"
                                                                 Tag="RunButton"
                                                                 x:Name="RunButton"
                                                                 AutomationProperties.Name="Run"
                                                                 LargePathSource="{StaticResource Skin_RunBackup_Geometry}"
                                                                 Command="{Binding Path=DataContext.RibbonTabViewModel.ViewModelCommands.RunCommand, ElementName=SBkUpWindow}">
                                        <controls:LargeImageRibbonButton.ToolTip>
                                            <ToolTip x:Uid="ToolTip_14" Style="{StaticResource ButtonToolTip}">
                                                <TextBlock x:Uid="TextBlock_17" Style="{StaticResource ToolTipTextBlock}" Text="Run the selected backup now, without waiting until it is next scheduled to run."/>
                                            </ToolTip>
                                        </controls:LargeImageRibbonButton.ToolTip>
                                    </controls:LargeImageRibbonButton>


                                    <controls:LargeImageRibbonButton x:Uid="controls:LargeImageRibbonButton_2" Margin="10,3,0,0" ButtonText="Modify"
                                                                 Tag="EditButton"
                                                                 x:Name="EditButton"
                                                                 AutomationProperties.Name="Edit"
                                                                 LargePathSource="{StaticResource Skin_EditBackup_Geometry}"
                                                                 Command="{Binding Path=DataContext.RibbonTabViewModel.ViewModelCommands.ModifyCommand, ElementName=SBkUpWindow}">
                                        <controls:LargeImageRibbonButton.ToolTip>
                                            <ToolTip x:Uid="ToolTip_13" Style="{StaticResource ButtonToolTip}">
                                                <TextBlock x:Uid="TextBlock_16" Style="{StaticResource ToolTipTextBlock}" Text="Change the location that the backup is stored, whether or not the backup is encrypted, and how many past versions of the backup to keep. If you wish to back up a different folder, create a new backup."/>
                                            </ToolTip>
                                        </controls:LargeImageRibbonButton.ToolTip>
                                    </controls:LargeImageRibbonButton>

                                    <controls:LargeImageRibbonButton x:Uid="controls:LargeImageRibbonButton_4" Margin="10,3,0,0" ButtonText="Delete"
                                                                 Tag="DeleteButton"
                                                                 x:Name="DeleteButton"
                                                                 AutomationProperties.Name="Delete"
                                                                 LargePathSource="{StaticResource Skin_DeleteBackup_Geometry}"
                                                                 Command="{Binding Path=DataContext.RibbonTabViewModel.ViewModelCommands.DeleteCommand, ElementName=SBkUpWindow}">
                                        <controls:LargeImageRibbonButton.ToolTip>
                                            <ToolTip x:Uid="ToolTip_15" Style="{StaticResource ButtonToolTip}">
                                                <TextBlock x:Uid="TextBlock_18" Style="{StaticResource ToolTipTextBlock}" Text="Delete the selected backup. Any backup files created by the backup will not be deleted."/>
                                            </ToolTip>
                                        </controls:LargeImageRibbonButton.ToolTip>
                                    </controls:LargeImageRibbonButton>
                                </StackPanel>

                                <TextBlock x:Uid="TextBlock_1" Grid.Row="1" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1"
                                       Margin="0,0,0,3"
                                       Text="Selected Backup"
                                       TextAlignment="Center"
                                       TextWrapping="NoWrap"
                                       FontSize="{StaticResource Shared.FontSize.12px}"
                                       Foreground="{DynamicResource Brush.FakeRibbonGroupHeader.Text}"/>

                                <Border x:Uid="Border_13" Grid.Row="0" Grid.RowSpan="2" Grid.Column="3"
                                    Width="1"
                                    Margin="6,2,6,2"
                                    BorderThickness="0"
                                    SnapsToDevicePixels="True"
                                    Background="{DynamicResource Brush.FakeRibbonTab.SeparatorBorder}"/>
                            </Grid>
                        </StackPanel>
                    </TabItem>
                    <TabItem x:Uid="TabItem_2" x:Name="restoreTab" Header="Restore" Style="{StaticResource FakeRibbonTabItemStyle}" VerticalAlignment="Top">
                        <StackPanel x:Uid="StackPanel_20" Background="Transparent" KeyboardNavigation.TabNavigation="Once">
                            <Grid x:Uid="Grid_11" Height="100">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Uid="ColumnDefinition_16" Width="Auto"/>
                                    <ColumnDefinition x:Uid="ColumnDefinition_17" Width="Auto"/>
                                    <ColumnDefinition x:Uid="ColumnDefinition_18" Width="Auto"/>
                                    <ColumnDefinition x:Uid="ColumnDefinition_19" Width="Auto"/>
                                    <ColumnDefinition x:Uid="ColumnDefinition_20" Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Uid="RowDefinition_11" Height="*"/>
                                    <RowDefinition x:Uid="RowDefinition_12" Height="Auto" />
                                </Grid.RowDefinitions>

                                <StackPanel x:Uid="StackPanel_21" Orientation="Horizontal" Grid.Row="0" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1">
                                    <controls:LargeImageRibbonButton x:Uid="controls:LargeImageRibbonButton_5" Margin="10,3,0,0" ButtonText="All Files"
                                                                 Tag="AllButton"
                                                                 x:Name="AllButton"
                                                                 AutomationProperties.Name="All Files"
                                                                 LargePathSource="{StaticResource Skin_Restore_Geometry}"
                                                                 Command="{Binding Path=DataContext.RibbonTabViewModel.ViewModelCommands.AllCommand, ElementName=SBkUpWindow}">
                                        <controls:LargeImageRibbonButton.ToolTip>
                                            <ToolTip x:Uid="ToolTip_16" Style="{StaticResource ButtonToolTip}">
                                                <TextBlock x:Uid="TextBlock_19" Style="{StaticResource ToolTipTextBlock}" Text="Restore all files in the selected backup file to a specified folder location."/>
                                            </ToolTip>
                                        </controls:LargeImageRibbonButton.ToolTip>
                                    </controls:LargeImageRibbonButton>


                                    <controls:LargeImageRibbonButton x:Uid="controls:LargeImageRibbonButton_6" Margin="10,3,0,0" ButtonText="Specific Files"
                                                                 Tag="SpecificButton"
                                                                 x:Name="SpecificButton"
                                                                 AutomationProperties.Name="Specific Files"
                                                                 LargePathSource="{StaticResource Skin_RestoreSpecific_Geometry}"
                                                                 Command="{Binding Path=DataContext.RibbonTabViewModel.ViewModelCommands.SpecificCommand, ElementName=SBkUpWindow}">
                                        <controls:LargeImageRibbonButton.ToolTip>
                                            <ToolTip x:Uid="ToolTip_17" Style="{StaticResource ButtonToolTip}">
                                                <TextBlock x:Uid="TextBlock_20" Style="{StaticResource ToolTipTextBlock}" Text="Restore only the chosen files in the selected backup file to a specified folder location."/>
                                            </ToolTip>
                                        </controls:LargeImageRibbonButton.ToolTip>
                                    </controls:LargeImageRibbonButton>

                                    <controls:LargeImageRibbonButton x:Uid="controls:LargeImageRibbonButton_7" Margin="10,3,0,0" ButtonText="Open in WinZip"
                                                                 Tag="OpenButton"
                                                                 x:Name="OpenButton"
                                                                 AutomationProperties.Name="Open in WinZip"
                                                                 LargePathSource="{StaticResource Skin_Zip_Geometry}"
                                                                 Command="{Binding Path=DataContext.RibbonTabViewModel.ViewModelCommands.OpenCommand, ElementName=SBkUpWindow}">
                                        <controls:LargeImageRibbonButton.ToolTip>
                                            <ToolTip x:Uid="ToolTip_18" Style="{StaticResource ButtonToolTip}">
                                                <TextBlock x:Uid="TextBlock_21" Style="{StaticResource ToolTipTextBlock}" Text="Open the selected backup file in WinZip instead of restoring files. WinZip can be used to view the content, modify the backup, and perform other advanced features on the backed up file."/>
                                            </ToolTip>
                                        </controls:LargeImageRibbonButton.ToolTip>
                                    </controls:LargeImageRibbonButton>
                                </StackPanel>

                                <TextBlock x:Uid="TextBlock_22" Grid.Row="1" Grid.RowSpan="1" Grid.Column="0" Grid.ColumnSpan="1"
                                       Margin="0,0,0,3"
                                       Text="Selected Backup"
                                       TextAlignment="Center"
                                       TextWrapping="NoWrap"
                                       FontSize="{StaticResource Shared.FontSize.12px}"
                                       Foreground="{DynamicResource Brush.FakeRibbonGroupHeader.Text}"/>

                                <Border x:Uid="Border_14" Grid.Row="0" Grid.RowSpan="2"
                                    Grid.Column="1" Grid.ColumnSpan="1"
                                    Width="1"
                                    Margin="6,2,6,2"
                                    BorderThickness="0"
                                    SnapsToDevicePixels="True"
                                    Background="{DynamicResource Brush.FakeRibbonTab.SeparatorBorder}"/>

                                <StackPanel x:Uid="StackPanel_22" Orientation="Horizontal" Grid.Row="0" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1">
                                    <CheckBox x:Uid="CheckBox_1" VerticalAlignment="Center"
                                          Style="{StaticResource CheckBoxStyle}"
                                          x:Name="ReplaceExistCheckBox"
                                          IsChecked="{Binding Path=DataContext.OverWrite, ElementName=SBkUpWindow, Mode=TwoWay}">
                                        <TextBlock x:Uid="TextBlock_30" Text="Replace Existing Files" Margin="3,0,0,0" TextTrimming="CharacterEllipsis"/>
                                    </CheckBox>
                                </StackPanel>

                                <TextBlock x:Uid="TextBlock_24" Grid.Row="1" Grid.RowSpan="1" Grid.Column="2" Grid.ColumnSpan="1"
                                       Margin="0,0,0,3"
                                       Text="Options"
                                       TextAlignment="Center"
                                       TextWrapping="NoWrap"
                                       FontSize="{StaticResource Shared.FontSize.12px}"
                                       Foreground="{DynamicResource Brush.FakeRibbonGroupHeader.Text}"/>

                                <Border x:Uid="Border_15" Grid.Row="0" Grid.RowSpan="2"
                                    Grid.Column="3" Grid.ColumnSpan="1"
                                    Width="1"
                                    Margin="6,2,6,2"
                                    BorderThickness="0"
                                    SnapsToDevicePixels="True"
                                    Background="{DynamicResource Brush.FakeRibbonTab.SeparatorBorder}"/>

                            </Grid>
                        </StackPanel>
                    </TabItem>
                </TabControl>
            </StackPanel>

            <DockPanel x:Uid="DockPanel_1" x:Name="jobView" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" LastChildFill="True">
                <StackPanel x:Uid="StackPanel_23" Orientation="Horizontal" Margin="0,30,0,0" DockPanel.Dock="Top">
                    <TextBlock x:Uid="TextBlock" Text="Backup" Style="{StaticResource HeaderTextBlockStyle}" Margin="5,0,0,0" Width="197"/>
                    <TextBlock x:Uid="TextBlock_25" Text="Enabled" Style="{StaticResource HeaderTextBlockStyle}" Width="60"/>
                    <TextBlock x:Uid="TextBlock_26" Text="Frequency (days)" TextAlignment="Center" Style="{StaticResource HeaderTextBlockStyle}" Width="75"/>
                    <TextBlock x:Uid="TextBlock_27" Text="Time" TextAlignment="Center" Style="{StaticResource HeaderTextBlockStyle}" Width="112"/>
                    <TextBlock x:Uid="TextBlock_28" Text="Start on" TextAlignment="Center" Style="{StaticResource HeaderTextBlockStyle}" Width="140"/>
                </StackPanel>
                <ScrollViewer x:Uid="ScrollViewer_1" x:Name="ScrollViewer_1" VerticalScrollBarVisibility="Auto" CanContentScroll="True" Width="650" HorizontalAlignment="Left">
                    <ListBox x:Uid="JobListBox" x:Name="JobListBox" ItemsSource="{Binding Path=DataContext.Items, ElementName=SBkUpWindow}"
                             AutomationProperties.Name="Jobs"
                             Height="Auto" Width="Auto"
                             BorderThickness="0"
                             Margin="2,1,0,0"
                             HorizontalAlignment="Left"
                             SelectionMode="Extended"
                             VirtualizingStackPanel.IsVirtualizing="True"
                             SelectionChanged="JobListBox_SelectionChanged"
                             MouseDown="JobListBox_MouseDown"
                             ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.ItemTemplate>
                            <DataTemplate x:Uid="DataTemplate_1">
                                <StackPanel x:Uid="StackPanel_24" Height="30" Orientation="Horizontal" Width="Auto">
                                    <TextBlock x:Uid="itemName" Text="{Binding Path=Name}"
                                       Height="20" Width="199" TextTrimming="CharacterEllipsis">
                                        <TextBlock.ToolTip>
                                            <ToolTip x:Uid="ToolTip_19" Visibility="{Binding RelativeSource={RelativeSource Self}, Path=PlacementTarget, Converter={StaticResource trimmedVisibilityConverter}}">
                                                <TextBlock x:Uid="TextBlock_37" Text="{Binding Path=Name}" Style="{StaticResource ToolTipTextBlock}"/>
                                            </ToolTip>
                                        </TextBlock.ToolTip>
                                    </TextBlock>
                                    <StackPanel x:Uid="StackPanel_25" Orientation="Horizontal" Visibility="{Binding Running, Converter={StaticResource ReverseBoolToVis}}">
                                        <CheckBox x:Uid="itemCheckBox" AutomationProperties.Name="Enable"  Style="{StaticResource CheckBoxStyle}" IsChecked="{Binding Path=IsEnabled}" Width="30"/>
                                        <controls:NumericUpDown x:Uid="numericUpDown_1" Height="26" Margin="30,0,0,0" x:Name="numericUpDown" AutomationProperties.Name="Numeric Up Down"
                                                    Value="{Binding Frequency, Mode=TwoWay}"
                                                    Visibility="{Binding ModifiedByUser, Converter={StaticResource ReverseBoolToVis}}"/>
                                        <controls:TimeUpDown x:Uid="TimeUpDown_1" Height="26" Margin="30,0,0,0" x:Name="timeUpDown"
                                                 Value="{Binding Path=Time, Mode=TwoWay}"
                                                 Visibility="{Binding ModifiedByUser, Converter={StaticResource ReverseBoolToVis}}"/>
                                        <controls:DatePicker x:Uid="DatePicker" Height="26" Margin="30,0,0,0" x:Name="datePicker"
                                                 Value="{Binding Date, Mode=TwoWay}"
                                                 Visibility="{Binding ModifiedByUser, Converter={StaticResource ReverseBoolToVis}}"/>
                                        <TextBlock x:Uid="TextBlock_29" Margin="30,0,0,0" Text="Schedule modified externally - use Task Scheduler"
                                           Height="20" TextTrimming="CharacterEllipsis" Visibility="{Binding ModifiedByUser, Converter={StaticResource BoolToVis}}"/>
                                    </StackPanel>
                                    <TextBlock x:Uid="TextBlock_31" Text="Running" Margin="100,0,0,0" Height="20"
                                       Visibility="{Binding Running, Converter={StaticResource BoolToVis}}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemContainerStyle>
                            <Style x:Uid="Style_4" TargetType="{x:Type ListBoxItem}">
                                <EventSetter x:Uid="EventSetter_1" Event="PreviewMouseLeftButtonDown" Handler="ListBoxItem_PreviewMouseLeftButtonDown"/>
                                <Setter x:Uid="Setter_14" Property="IsSelected" Value="{Binding Mode=TwoWay, Path=IsSelected}"/>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </ScrollViewer>
            </DockPanel>

            <TextBlock x:Uid="bottomTextBlock" Margin="5,0,0,0" SizeChanged="bottomTextBlock_SizeChanged" TextTrimming="CharacterEllipsis" x:Name="bottomTextBlock" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2">
                <TextBlock.ToolTip>
                    <ToolTip x:Uid="BottomToolTip" x:Name="BottomToolTip" Visibility="Collapsed">
                        <TextBlock x:Uid="BottomToolTip_TextBlock" x:Name="BottomToolTip_TextBlock" Style="{StaticResource ToolTipTextBlock}"/>
                    </ToolTip>
                </TextBlock.ToolTip>
            </TextBlock>

            <DockPanel x:Uid="JobAndBackupView" x:Name="JobAndBackupView" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" LastChildFill="True">

                <StackPanel x:Uid="StackPanel_26" Orientation="Horizontal" Margin="0,30,0,0" DockPanel.Dock="Top">
                    <TextBlock x:Uid="TextBlock_32" Text="Backup jobs" Style="{StaticResource TitleTextBlockStyle}" Margin="10,0,0,0" Width="310"/>
                    <TextBlock x:Uid="TextBlock_33" Text="Available backups" Style="{StaticResource TitleTextBlockStyle}" Margin="10,0,0,0" Width="310"/>
                </StackPanel>

                <StackPanel x:Uid="StackPanel_27" x:Name="StackPanel_27" Orientation="Horizontal" Margin="10,5,0,0">
                    <Border x:Uid="Border_16" BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush x:Uid="SolidColorBrush_1" Color="{Binding Path=BorderBrush.Color,ElementName=JobAndBackup_JobListBox}"/>
                        </Border.BorderBrush>
                        <ScrollViewer x:Uid="ScrollViewer_2" x:Name="ScrollViewer_2" 
                              VerticalScrollBarVisibility="Auto" CanContentScroll="True" 
                              Height="{Binding Path=ActualHeight, ElementName=StackPanel_27}" Width="310">
                            <ListBox x:Uid="JobAndBackup_JobListBox" x:Name="JobAndBackup_JobListBox"
                                    AutomationProperties.Name="Jobs"
                                    ItemsSource="{Binding Path=DataContext.Items, ElementName=SBkUpWindow}"
                                    Height="Auto"
                                    Width="310"
                                    BorderThickness="0"
                                    Margin="0,0,0,0"
                                    Style="{StaticResource ListBoxStyle}"
                                    SelectionMode="Single"
                                    SelectionChanged="JobAndBackup_JobListBox_SelectionChanged"
                                    ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                <ListBox.ItemTemplate>
                                    <DataTemplate x:Uid="DataTemplate_2">
                                        <TextBlock x:Uid="TextBlock_34" Margin="-2,6,0,8"
                                                    TextTrimming="CharacterEllipsis"
                                                    Style="{StaticResource Shared.TextBlockStyle.SegoeUI.Normal.14px}"
                                                    Text="{Binding Path=Name}">
                                            <TextBlock.ToolTip>
                                                <ToolTip x:Uid="ToolTip_20" Visibility="{Binding RelativeSource={RelativeSource Self}, Path=PlacementTarget, Converter={StaticResource trimmedVisibilityConverter}}">
                                                    <TextBlock x:Uid="TextBlock_38" Text="{Binding Path=Name}" Style="{StaticResource ToolTipTextBlock}"/>
                                                </ToolTip>
                                            </TextBlock.ToolTip>
                                        </TextBlock>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </ScrollViewer>
                    </Border>

                    <Border x:Uid="Border_17" BorderThickness="1" Margin="10,0,0,0">
                        <Border.BorderBrush>
                            <SolidColorBrush x:Uid="SolidColorBrush_2" Color="{Binding Path=BorderBrush.Color,ElementName=JobAndBackup_BackupListBox}"/>
                        </Border.BorderBrush>
                        <ScrollViewer x:Uid="ScrollViewer_3" x:Name="ScrollViewer_3" 
                                        VerticalScrollBarVisibility="Auto" CanContentScroll="True" 
                                        Height="{Binding Path=ActualHeight, ElementName=StackPanel_27}" Width="310">
                            <ListBox x:Uid="JobAndBackup_BackupListBox" x:Name="JobAndBackup_BackupListBox"
                                    AutomationProperties.Name="Backups"
                                    ItemsSource="{Binding Path=DataContext.Backups, ElementName=SBkUpWindow}"
                                    SelectedItem="{Binding Path=DataContext.SelectedBackup, ElementName=SBkUpWindow}"
                                    Style="{StaticResource ListBoxStyle}"
                                    Height="Auto"
                                    Width="310"
                                    BorderThickness="0"
                                    SelectionMode="Single"
                                    ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled">
                                <ListBox.ItemTemplate>
                                    <DataTemplate x:Uid="DataTemplate_3">
                                        <StackPanel x:Uid="StackPanel_28" Orientation="Horizontal">
                                            <TextBlock x:Uid="TextBlock_35" Margin="0,6,0,8" TextTrimming="CharacterEllipsis" Style="{StaticResource Shared.TextBlockStyle.SegoeUI.Normal.14px}" Text="{Binding Path=Name}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </ScrollViewer>
                    </Border>

                    <TextBlock x:Uid="NoneSavedTextBlock" x:Name="NoneSavedTextBlock" Text="(none saved)"
                           Width="{Binding Path=ActualWidth, ElementName=JobAndBackup_BackupListBox}"
                           Margin="-310,0,0,0"
                           VerticalAlignment="Center"
                           TextAlignment="Center"
                           Visibility="{Binding Path=DataContext.Backups, ElementName=SBkUpWindow, Converter={StaticResource ListToVisibilityConverter}, Mode=OneWay}"
                           Background="Transparent" Opacity="0.5" Style="{StaticResource Shared.TextBlockStyle.SegoeUI.SemiBold.15px}"/>
                </StackPanel>
            </DockPanel>

            <Frame x:Uid="NagBannerFrame" x:Name="NagBannerFrame"
               Grid.Row="4"
               Grid.Column="0"
               Grid.ColumnSpan="2"
               IsTabStop="False"
               Height="40"
               NavigationUIVisibility="Hidden"/>

        </Grid>
</local:BaseWindow>
