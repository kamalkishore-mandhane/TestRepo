<local:BaseButton x:Uid="ImageRibbonButton" x:Class="ImgUtil.WPFUI.Controls.RibbonImageButton"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:local="clr-namespace:ImgUtil.WPFUI.Controls"
                  x:Name="ImageRibbonButton"
                  Loaded="ImageRibbonButton_Loaded"
                  Unloaded="ImageRibbonButton_Unloaded">

    <Button.Resources>
        <ResourceDictionary x:Uid="ResourceDictionary_1">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary x:Uid="ResourceDictionary_2" >
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary x:Uid="ResourceDictionary_3" Source="../Themes/WinZipColorTheme.xaml"/>
                    </ResourceDictionary.MergedDictionaries>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            
            <ControlTemplate x:Uid="ControlTemplate_1" x:Key="RibbonImageButtonTemplate" TargetType="{x:Type Button}">
                <Border x:Uid="ButtonBorder" x:Name="ButtonBorder"
                    CornerRadius="0"
                    SnapsToDevicePixels="True"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}">
                    <StackPanel x:Uid="StackPanel_1" FlowDirection="LeftToRight">
                        <Rectangle x:Uid="Rectangle_1" Width="36"
                                   Height="36"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Margin="6,0,6,0"
                                   Fill="{Binding ElementName=ImageRibbonButton, Path=GeometrySource}"
                                   Opacity="{Binding Path=IsEnabled, ElementName=ImageRibbonButton, Converter={StaticResource EnabledToOpacityConverter}}"/>
                        <Grid x:Uid="Grid_1" FlowDirection="LeftToRight">
                            <TextBlock x:Uid="TextBlock_1" Margin="2,4,2,2"
                                   TextAlignment="Center"
                                   TextWrapping="Wrap"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Top"
                                   Text="{Binding Path=ButtonText, ElementName=ImageRibbonButton}"/>
                        </Grid>
                    </StackPanel>
                </Border>
            </ControlTemplate>
        </ResourceDictionary>
    </Button.Resources>

    <Button.Style>
        <Style x:Uid="Style_1" TargetType="{x:Type Button}">
            <Setter x:Uid="Setter_1" Property="Background" Value="Transparent"/>
            <Setter x:Uid="Setter_2" Property="BorderBrush" Value="Transparent"/>
            <Setter x:Uid="Setter_17" Property="BorderThickness" Value="1"/>
            <Setter x:Uid="Setter_3" Property="Focusable" Value="True"/>
            <Setter x:Uid="Setter_4" Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter x:Uid="Setter_5" Property="SnapsToDevicePixels" Value="True"/>
            <Setter x:Uid="Setter_6" Property="Template" Value="{StaticResource RibbonImageButtonTemplate}"/>
            <Style.Triggers>
                <Trigger x:Uid="Trigger_1" Property="IsMouseOver" Value="True">
                    <Setter x:Uid="Setter_8" Property="Background" Value="{DynamicResource Brush.Item.HoverBackground}"/>
                    <Setter x:Uid="Setter_9" Property="BorderBrush" Value="{DynamicResource Brush.Item.HoverBorder}"/>
                </Trigger>
                <Trigger x:Uid="Trigger_5" Property="IsKeyboardFocused" Value="True">
                    <Setter x:Uid="Setter_15" Property="Background" Value="{DynamicResource Brush.Item.HoverBackground}"/>
                    <Setter x:Uid="Setter_16" Property="BorderBrush" Value="{DynamicResource Brush.Item.HoverBorder}"/>
                </Trigger>
                <Trigger x:Uid="Trigger_2" Property="IsPressed" Value="True">
                    <Setter x:Uid="Setter_10" Property="Background" Value="{DynamicResource Brush.Item.SelectedBackground}"/>
                    <Setter x:Uid="Setter_11" Property="BorderBrush" Value="{DynamicResource Brush.Item.SelectedBorder}"/>
                </Trigger>
                <Trigger x:Uid="Trigger_3" Property="IsEnabled" Value="False">
                    <Setter x:Uid="Setter_12" Property="Foreground" Value="{DynamicResource Brush.Item.Text.Gray}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Button.Style>

</local:BaseButton>
