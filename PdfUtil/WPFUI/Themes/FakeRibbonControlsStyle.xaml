<ResourceDictionary x:Uid="ResourceDictionary_1" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:PdfUtil.WPFUI.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary x:Uid="ResourceDictionary_2" Source="../Themes/SharedStyle.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Uid="Style_2" x:Key="FakeRibbonTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter x:Uid="Setter_5" Property="Height" Value="24"/>
        <Setter x:Uid="Setter_6" Property="MinWidth" Value="80"/>
        <Setter x:Uid="Setter_7" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_2" TargetType="{x:Type TabItem}">
                    <Border x:Uid="Border" x:Name="Border"
                                    BorderThickness="0"
                                    Margin="0"
                                    BorderBrush="{DynamicResource Brush.Item.Border}"
                                    Background="Transparent"
                                    SnapsToDevicePixels="True">
                        <Border x:Uid="TabItemBorder" x:Name="TabItemBorder"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        BorderThickness="1"
                                        Padding="5,0,5,0">
                            <ContentPresenter x:Uid="ContentSite" x:Name="ContentSite"
                                              ContentSource="Header"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger x:Uid="MultiTrigger_1" >
                            <MultiTrigger.Conditions>
                                <Condition x:Uid="Condition_1" Property="IsSelected" Value="False" />
                                <Condition x:Uid="Condition_2" Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter x:Uid="Setter_8" TargetName="TabItemBorder" Property="Background"
                                            Value="{DynamicResource Brush.Item.HoverBackground}" />
                            <Setter x:Uid="Setter_9" TargetName="TabItemBorder" Property="BorderBrush"
                                            Value="{DynamicResource Brush.Item.HoverBorder}" />
                        </MultiTrigger>
                        <Trigger x:Uid="Trigger_3" Property="IsSelected" Value="True">
                            <Trigger.Setters>
                                <Setter x:Uid="Setter_10" TargetName="Border"
                                                Property="Background"
                                                Value="{DynamicResource Brush.FakeRibbonTab.Background}" />
                                <Setter x:Uid="Setter_11" TargetName="Border"
                                            Property="BorderThickness"
                                            Value="1,1,1,0" />
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Uid="Style_3" x:Key="FakeRibbonTabStyle" TargetType="{x:Type TabControl}">
        <Setter x:Uid="Setter_12" Property="Background" Value="Transparent" />
        <Setter x:Uid="Setter_13" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_3" TargetType="{x:Type TabControl}">
                    <Grid x:Uid="Grid_2" Background="{DynamicResource Brush.FakeRibbonTab.Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition x:Uid="RowDefinition_1" Height="24" />
                            <RowDefinition x:Uid="RowDefinition_2" Height="*" />
                            <RowDefinition x:Uid="RowDefinition_3" Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Uid="ColumnDefinition_1" Width="auto" />
                            <ColumnDefinition x:Uid="ColumnDefinition_2" Width="*" />
                            <ColumnDefinition x:Uid="ColumnDefinition_3" Width="35" />
                        </Grid.ColumnDefinitions>

                        <Border x:Uid="Border_1" BorderThickness="0,0,0,1"
                                Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="3"
                                BorderBrush="{DynamicResource Brush.Item.Border}"
                                Background="{DynamicResource Brush.PreviewPane.WhiteBackground}"/>

                        <StackPanel x:Uid="StackPanel_1" Grid.Column="1"
                                    Grid.Row="0"
                                    Orientation="Horizontal">

                            <controls:FakeRibbonApplicationMenu x:Uid="controls:FakeRibbonApplicationMenu_1" Margin="1,0,0,0"/>
                            <TabPanel x:Uid="fakeRibbonTabTabPanel" x:Name="fakeRibbonTabTabPanel"
                                      Width="220"
                                      IsItemsHost="True"/>
                        </StackPanel>

                        <ContentPresenter x:Uid="PART_SelectedContentHost" x:Name="PART_SelectedContentHost"
                                          Grid.Column="0"
                                          Grid.ColumnSpan="2"
                                          Grid.Row="1"
                                          ContentSource="SelectedContent"/>

                        <Border x:Uid="Border_2" SnapsToDevicePixels="True"
                                BorderThickness="0,0,0,1"
                                Grid.Row="2"
                                Grid.Column="0"
                                Grid.ColumnSpan="4"
                                BorderBrush="{DynamicResource Brush.Item.Border}" />

                        <StackPanel x:Uid="StackPanel_2" VerticalAlignment="Center" Grid.Column="2" HorizontalAlignment="Left">
                            <controls:ImageButton   x:Uid="controls:ImageButton_1" Command="{Binding Path=DataContext.FakeRibbonTabViewModel.ViewModelCommands.HelpCommand, ElementName=PdfUtilViewWindow}"  Tag="HelpBtn"  Style="{StaticResource ImageButtonStyle}" Height="18" Width="18"  Margin="0,0,7,0" ImageSource="/Resources/help.ico"   RenderTransformOrigin="-0.694,1.083">
                                <controls:ImageButton.ToolTip>
                                    <ToolTip x:Uid="ToolTip_4" Style="{StaticResource ButtonToolTip}">
                                        <TextBlock x:Uid="TextBlock_help" Text="Help"/>
                                    </ToolTip>
                                </controls:ImageButton.ToolTip>
                            </controls:ImageButton>
                        </StackPanel>
                        
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Uid="Style_48" x:Key="FakeRibbonTwoLineTextStyle" TargetType="{x:Type controls:FakeRibbonTwoLineText}">
        <Setter x:Uid="Setter_272" Property="VerticalAlignment" Value="Center" />
        <Setter x:Uid="Setter_273" Property="HorizontalAlignment" Value="Center" />
        <Setter x:Uid="Setter_274" Property="Background" Value="Transparent" />
        <Setter x:Uid="Setter_275" Property="BorderBrush" Value="Transparent" />
        <Setter x:Uid="Setter_276" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_29" TargetType="{x:Type controls:FakeRibbonTwoLineText}">
                    <Grid x:Uid="Grid_13" SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition x:Uid="RowDefinition_5"/>
                            <RowDefinition x:Uid="RowDefinition_6" Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock x:Uid="PART_TextBlock1" Name="PART_TextBlock1" 
                                   BaselineOffset="{TemplateBinding BaselineOffset}"
                                   LineHeight="{TemplateBinding LineHeight}"
                                   LineStackingStrategy="{TemplateBinding LineStackingStrategy}"
                                   Padding="{TemplateBinding Padding}"
                                   TextAlignment="{TemplateBinding TextAlignment}" 
                                   TextDecorations="{TemplateBinding TextDecorations}"
                                   TextEffects="{TemplateBinding TextEffects}"
                                   TextTrimming="None"
                                   TextWrapping="NoWrap"
                                   VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                   Grid.Row="0" />
                        <DockPanel x:Uid="DockPanel_1" Grid.Row="1" 
                                       HorizontalAlignment="{TemplateBinding HorizontalAlignment}" >
                            <Grid x:Uid="pathGrid" x:Name="pathGrid"
                                  MinHeight="{TemplateBinding LineHeight}"
                                  Margin="2,0,0,0"
                                  DockPanel.Dock="Right">
                                <Path x:Uid="PART_Path" Name="PART_Path" 
                                      VerticalAlignment="Center" 
                                      Data="{TemplateBinding PathData}"
                                      Fill="{TemplateBinding PathFill}"
                                      Stroke="{TemplateBinding PathStroke}"/>
                            </Grid>
                            <TextBlock x:Uid="PART_TextBlock2" Name="PART_TextBlock2"
                                       Margin="0,0,2,0"
                                       BaselineOffset="{TemplateBinding BaselineOffset}"
                                       LineHeight="{TemplateBinding LineHeight}"
                                       LineStackingStrategy="{TemplateBinding LineStackingStrategy}"
                                       Padding="{TemplateBinding Padding}"
                                       TextAlignment="{TemplateBinding TextAlignment}" 
                                       TextDecorations="{TemplateBinding TextDecorations}"
                                       TextEffects="{TemplateBinding TextEffects}" 
                                       TextTrimming="{TemplateBinding TextTrimming}"
                                       TextWrapping="NoWrap"
                                       VerticalAlignment="{TemplateBinding VerticalAlignment}" 
                                       DockPanel.Dock="Left"/>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_57" Property="PathData" Value="{x:Null}">
                            <Setter x:Uid="Setter_277" TargetName="pathGrid" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger x:Uid="Trigger_58" Property="Text" Value="{x:Null}">
                            <Setter x:Uid="Setter_278" TargetName="PART_TextBlock2" Property="Margin" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Uid="Style_49" x:Key="FakeRibbonLargeImageButtonStyle" TargetType="{x:Type controls:ImageButton}">
        <Setter x:Uid="Setter_279" Property="Background" Value="Transparent"/>
        <Setter x:Uid="Setter_280" Property="BorderBrush" Value="Transparent"/>
        <Setter x:Uid="Setter_281" Property="BorderThickness" Value="1"/>
        <Setter x:Uid="Setter_282" Property="Focusable" Value="True"/>
        <Setter x:Uid="Setter_283" Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter x:Uid="Setter_284" Property="SnapsToDevicePixels" Value="True"/>
        <Setter x:Uid="Setter_285" Property="Template">
            <Setter.Value>
                <ControlTemplate x:Uid="ControlTemplate_30" TargetType="controls:ImageButton">
                    <Border x:Uid="Border_30" x:Name="ButtonBorder"
                            CornerRadius="0"
                            SnapsToDevicePixels="True"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid x:Uid="Grid_14" FlowDirection="LeftToRight">
                            <Grid.RowDefinitions>
                                <RowDefinition x:Uid="RowDefinition_7" Height="1*"/>
                                <RowDefinition x:Uid="RowDefinition_4" Height="1*"/>
                            </Grid.RowDefinitions>
                            <Image x:Uid="Image_7"
                                   Width="34"
                                   Height="36"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   RenderOptions.BitmapScalingMode="Fant"
                                   Source="{TemplateBinding ImageSource}"
                                   Opacity="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ImageButton}}, Converter={StaticResource enabled2opacity}}"
                                   Visibility="{Binding Path = HasImageSourceString, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ImageButton}}, Converter={StaticResource bool2Vis}}"/>
                            <Path  x:Uid="path"
                                   Width="34"
                                   Height="36"
                                   x:Name="path"
                                   Margin="5,2,0,-2"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Style="{DynamicResource PathDefaultFillStyle}"
                                   Data="{TemplateBinding ButtonPathSource}"
                                   Visibility="{Binding Path = HasPathSourceString, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ImageButton}}, Converter={StaticResource bool2Vis}}"/>
                            <Rectangle x:Uid="rect"
                                       Width="34"
                                       Height="36"
                                       x:Name="rect"
                                       Margin="5,2,0,-2"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Fill="{TemplateBinding ButtonBrushSource}"
                                       Visibility="{Binding Path=HasBrushSourceString, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ImageButton}}, Converter={StaticResource bool2Vis}}"/>
                            <Grid x:Uid="Grid_15" FlowDirection="LeftToRight" Grid.Row="1">
                                <controls:FakeRibbonTwoLineText x:Uid="controls:FakeRibbonTwoLineText_1" Margin="2"
                                                                Style="{StaticResource FakeRibbonTwoLineTextStyle}"
                                                                HasTwoLines ="True"
                                                                TextAlignment="Center"
                                                                HorizontalAlignment="Center"
                                                                HorizontalContentAlignment="Left"
                                                                Text="{TemplateBinding ButtonText}"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger x:Uid="Trigger_59" Property="Tag" Value="ScannerButton">
                            <Setter x:Uid="Setter_286" Property="Width" TargetName="path" Value="26"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_60" Property="Tag" Value="CameraButton">
                            <Setter x:Uid="Setter_287" Property="Height" TargetName="path" Value="30"/>
                        </Trigger>
                        <Trigger x:Uid="Trigger_61" Property="Tag" Value="ExtractImagesButton">
                            <Setter x:Uid="Setter_288" Property="Height" TargetName="path" Value="28"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger x:Uid="Trigger_62" Property="IsMouseOver" Value="True">
                <Setter x:Uid="Setter_289" Property="Background" Value="{DynamicResource Brush.Item.HoverBackground}"/>
                <Setter x:Uid="Setter_290" Property="BorderBrush" Value="{DynamicResource Brush.Item.HoverBorder}"/>
            </Trigger>
            <Trigger x:Uid="Trigger_63" Property="IsKeyboardFocused" Value="True">
                <Setter x:Uid="Setter_291" Property="Background" Value="{DynamicResource Brush.Item.HoverBackground}"/>
                <Setter x:Uid="Setter_292" Property="BorderBrush" Value="{DynamicResource Brush.Item.HoverBorder}"/>
            </Trigger>
            <Trigger x:Uid="Trigger_64" Property="IsPressed" Value="True">
                <Setter x:Uid="Setter_293" Property="Background" Value="{DynamicResource Brush.Item.SelectedBackground}"/>
                <Setter x:Uid="Setter_294" Property="BorderBrush" Value="{DynamicResource Brush.Item.SelectedBorder}"/>
            </Trigger>
            <Trigger x:Uid="Trigger_65" Property="IsEnabled" Value="False">
                <Setter x:Uid="Setter_295" Property="Foreground" Value="{DynamicResource Brush.Item.Text.Gray}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
